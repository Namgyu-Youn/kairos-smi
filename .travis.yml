language: python
python:
  - "3.5"
#  - "3.5-dev"  # 3.5 development branch
#  - "3.6"
#  - "3.6-dev"  # 3.6 development branch

matrix:
  include:
    - name: CUDA 8
      env:
      - CUDA=8.0.61-1
      - CUDA_SHORT=8.0
      - CUDA_APT=8-0
      - UBUNTU_VERSION=ubuntu1604
      dist: xenial
    - name: CUDA 9
      env:
      - CUDA=9.2.148-1
      - CUDA_SHORT=9.2
      - CUDA_APT=9-2
      - UBUNTU_VERSION=ubuntu1604
      dist: xenial
    - name: CUDA 10
      env:
      - CUDA=10.1.105-1
      - CUDA_APT=10-1
      - CUDA_SHORT=10.1
      - UBUNTU_VERSION=ubuntu1804
      dist: bionic

before_install:
  # set up cuda
  - INSTALLER=cuda-repo-${UBUNTU_VERSION}_${CUDA}_amd64.deb
  - wget http://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/${INSTALLER}
  - sudo dpkg -i ${INSTALLER}
  - wget https://developer.download.nvidia.com/compute/cuda/repos/${UBUNTU_VERSION}/x86_64/7fa2af80.pub
  - sudo apt-key add 7fa2af80.pub
  - sudo apt update -qq
  - sudo apt install -y cuda-core-${CUDA_APT} cuda-cudart-dev-${CUDA_APT} cuda-cufft-dev-${CUDA_APT}
  - sudo apt clean
  - CUDA_HOME=/usr/local/cuda-${CUDA_SHORT}
  - LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}
  - PATH=${CUDA_HOME}/bin:${PATH}
  - PATH=${PATH}:${PWD}
  
  # add rsa
  - sudo apt-get install sshpass -y
  - sshpass -V
  - echo -e 'testbuild\ntestbuild' | sudo passwd $USER
  - ssh-keygen -t rsa -b 4096 -C 'build@travis-ci.org' -f $HOME/.ssh/id_rsa -N ''
  - sshpass -p 'testbuild' ssh-copy-id -i $HOME/.ssh/id_rsa.pub -o StrictHostKeyChecking=no $USER@localhost 

# command to install dependencies
install:
  - pip install -r requirements.txt

# command to run tests
script:
  - python3 -m unittest discover -p "test_*.py" test